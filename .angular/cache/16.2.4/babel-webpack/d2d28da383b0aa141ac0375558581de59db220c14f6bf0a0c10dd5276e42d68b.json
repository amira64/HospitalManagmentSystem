{"ast":null,"code":"import { STORAGE_KEY } from 'src/app/data.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/data.service\";\nimport * as i3 from \"@angular/common\";\nfunction DoctorListComponent_tr_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\")(10, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function DoctorListComponent_tr_17_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const doctor_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.editDoctor(doctor_r1.id));\n    });\n    i0.ɵɵtext(11, \"Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(12, \"\\u00A0\\u00A0 \");\n    i0.ɵɵelementStart(13, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function DoctorListComponent_tr_17_Template_button_click_13_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const doctor_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.deleteDoctor(doctor_r1));\n    });\n    i0.ɵɵtext(14, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const doctor_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(doctor_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(doctor_r1.speciality);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(doctor_r1.experienceYears);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(doctor_r1.nationality);\n  }\n}\nexport class DoctorListComponent {\n  constructor(router, dataService) {\n    this.router = router;\n    this.dataService = dataService;\n    this.doctors = [];\n    this.storageKey = 'doctorsData';\n  }\n  ngOnInit() {\n    this.loadDoctorsFromStorage();\n  }\n  loadDoctorsFromStorage() {\n    const storedData = this.dataService.getData(STORAGE_KEY);\n    if (storedData && storedData.doctors) {\n      this.doctors = storedData.doctors;\n    }\n  }\n  saveData() {\n    const data = {\n      doctors: this.doctors\n    };\n    this.dataService.saveData(STORAGE_KEY, data);\n  }\n  addDoctor(name) {\n    const doctorId = this.generateUniqueId();\n    const newDoctor = {\n      id: doctorId,\n      name\n    };\n    this.doctors.push(newDoctor);\n    this.saveData();\n  }\n  generateUniqueId() {\n    return Math.floor(Math.random() * 1000000);\n  }\n  saveDoctorsToLocalStorage() {\n    localStorage.setItem('doctors', JSON.stringify(this.doctors));\n  }\n  editDoctor(doctorId) {\n    this.router.navigate(['doctors/edit-doctor', doctorId]);\n  }\n  deleteDoctor(doctor) {\n    const index = this.doctors.indexOf(doctor);\n    if (index !== -1) {\n      this.doctors.splice(index, 1);\n    }\n    console.log('Deleting doctor:', doctor);\n  }\n  static #_ = this.ɵfac = function DoctorListComponent_Factory(t) {\n    return new (t || DoctorListComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.DataService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DoctorListComponent,\n    selectors: [[\"app-doctor-list\"]],\n    decls: 18,\n    vars: 1,\n    consts: [[1, \"doctor-list\"], [1, \"styled-table\"], [4, \"ngFor\", \"ngForOf\"], [3, \"click\"]],\n    template: function DoctorListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n        i0.ɵɵtext(2, \"Doctors Data\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"table\", 1)(4, \"thead\")(5, \"tr\")(6, \"th\");\n        i0.ɵɵtext(7, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"th\");\n        i0.ɵɵtext(9, \"Speciality\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"th\");\n        i0.ɵɵtext(11, \"ExperienceYears\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"th\");\n        i0.ɵɵtext(13, \"Nationality\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"th\");\n        i0.ɵɵtext(15, \"Actions\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(16, \"tbody\");\n        i0.ɵɵtemplate(17, DoctorListComponent_tr_17_Template, 15, 4, \"tr\", 2);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(17);\n        i0.ɵɵproperty(\"ngForOf\", ctx.doctors);\n      }\n    },\n    dependencies: [i3.NgForOf],\n    styles: [\"\\n\\ntable[_ngcontent-%COMP%] {\\n    width: 100%;\\n    border-collapse: collapse;\\n    border-spacing: 0;\\n  }\\n  \\n  table[_ngcontent-%COMP%], th[_ngcontent-%COMP%], td[_ngcontent-%COMP%] {\\n    border: 1px solid hsl(147, 100%, 94%);\\n  }\\n  \\n  th[_ngcontent-%COMP%], td[_ngcontent-%COMP%] {\\n    padding: 10px;\\n    text-align: center; \\n\\n  }\\n  \\n  \\n\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZG9jdG9ycy9kb2N0b3ItbGlzdC9kb2N0b3ItbGlzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDBCQUEwQjtBQUMxQjtJQUNJLFdBQVc7SUFDWCx5QkFBeUI7SUFDekIsaUJBQWlCO0VBQ25COztFQUVBO0lBQ0UscUNBQXFDO0VBQ3ZDOztFQUVBO0lBQ0UsYUFBYTtJQUNiLGtCQUFrQixFQUFFLDBDQUEwQztFQUNoRTs7RUFFQSxxQ0FBcUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBDU1MgZm9yIHRhYmxlIHN0eWxpbmcgKi9cbnRhYmxlIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICAgIGJvcmRlci1zcGFjaW5nOiAwO1xuICB9XG4gIFxuICB0YWJsZSwgdGgsIHRkIHtcbiAgICBib3JkZXI6IDFweCBzb2xpZCBoc2woMTQ3LCAxMDAlLCA5NCUpO1xuICB9XG4gIFxuICB0aCwgdGQge1xuICAgIHBhZGRpbmc6IDEwcHg7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyOyAvKiBDZW50ZXItYWxpZ24gdGhlIGNvbnRlbnQgd2l0aGluIGNlbGxzICovXG4gIH1cbiAgXG4gIC8qIEFkZCBhZGRpdGlvbmFsIHN0eWxpbmcgYXMgbmVlZGVkICovXG4gICJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["STORAGE_KEY","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","DoctorListComponent_tr_17_Template_button_click_10_listener","restoredCtx","ɵɵrestoreView","_r3","doctor_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","editDoctor","id","DoctorListComponent_tr_17_Template_button_click_13_listener","ctx_r4","deleteDoctor","ɵɵadvance","ɵɵtextInterpolate","name","speciality","experienceYears","nationality","DoctorListComponent","constructor","router","dataService","doctors","storageKey","ngOnInit","loadDoctorsFromStorage","storedData","getData","saveData","data","addDoctor","doctorId","generateUniqueId","newDoctor","push","Math","floor","random","saveDoctorsToLocalStorage","localStorage","setItem","JSON","stringify","navigate","doctor","index","indexOf","splice","console","log","_","ɵɵdirectiveInject","i1","Router","i2","DataService","_2","selectors","decls","vars","consts","template","DoctorListComponent_Template","rf","ctx","ɵɵtemplate","DoctorListComponent_tr_17_Template","ɵɵproperty"],"sources":["C:\\Users\\LENOVO\\Desktop\\h2\\HMS\\src\\app\\doctors\\doctor-list\\doctor-list.component.ts","C:\\Users\\LENOVO\\Desktop\\h2\\HMS\\src\\app\\doctors\\doctor-list\\doctor-list.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DataService } from 'src/app/data.service';\nimport { STORAGE_KEY } from 'src/app/data.service';\n\n\n\n\n@Component({\n  selector: 'app-doctor-list',\n  templateUrl: './doctor-list.component.html',\n  styleUrls: ['./doctor-list.component.css']\n})\nexport class DoctorListComponent implements OnInit{\n\n  constructor(private router: Router,private dataService: DataService) {}\n\n  doctors: any[] = [];\n  private storageKey = 'doctorsData';\n\n  ngOnInit() {\n    this.loadDoctorsFromStorage();\n  }\n\n  loadDoctorsFromStorage() {\n    const storedData = this.dataService.getData(STORAGE_KEY);\n    if (storedData && storedData.doctors) {\n      this.doctors = storedData.doctors;\n    }\n  }\n\n  saveData() {\n    const data = { doctors: this.doctors };\n    this.dataService.saveData(STORAGE_KEY, data);\n  }\n \n  addDoctor(name: string) {\n    const doctorId = this.generateUniqueId();\n    const newDoctor = { id: doctorId, name };\n    this.doctors.push(newDoctor);\n    this.saveData();\n  }\n\n  private generateUniqueId() {\n    return Math.floor(Math.random() * 1000000);\n  }\n\n\n  private saveDoctorsToLocalStorage() {\n    localStorage.setItem('doctors', JSON.stringify(this.doctors));\n  }\n\n  editDoctor(doctorId: number) {\n    this.router.navigate(['doctors/edit-doctor', doctorId]);\n  }\n\n  deleteDoctor(doctor: any) {\n    const index = this.doctors.indexOf(doctor);\n    if (index !== -1) {\n      this.doctors.splice(index, 1);\n    }\n    console.log('Deleting doctor:', doctor);\n  }\n}\n","<div class=\"doctor-list\">\n  <h2>Doctors Data</h2>\n  <table class=\"styled-table\">\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Speciality</th>\n        <th>ExperienceYears</th>\n        <th>Nationality</th>\n        <th>Actions</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let doctor of doctors\">\n        <td>{{ doctor.name }}</td>\n        <td>{{doctor.speciality}}</td>\n        <td>{{doctor.experienceYears}}</td>\n        <td>{{doctor.nationality}}</td>\n        \n\n       \n        <td>\n          <button (click)=\"editDoctor(doctor.id)\">Edit</button>&nbsp;&nbsp;\n          <button (click)=\"deleteDoctor(doctor)\">Delete</button>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n"],"mappings":"AAGA,SAASA,WAAW,QAAQ,sBAAsB;;;;;;;;ICU5CC,EAAA,CAAAC,cAAA,SAAmC;IAC7BD,EAAA,CAAAE,MAAA,GAAiB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAC1BH,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAE,MAAA,GAAqB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAC9BH,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAE,MAAA,GAA0B;IAAAF,EAAA,CAAAG,YAAA,EAAK;IACnCH,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAE,MAAA,GAAsB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAI/BH,EAAA,CAAAC,cAAA,SAAI;IACMD,EAAA,CAAAI,UAAA,mBAAAC,4DAAA;MAAA,MAAAC,WAAA,GAAAN,EAAA,CAAAO,aAAA,CAAAC,GAAA;MAAA,MAAAC,SAAA,GAAAH,WAAA,CAAAI,SAAA;MAAA,MAAAC,MAAA,GAAAX,EAAA,CAAAY,aAAA;MAAA,OAASZ,EAAA,CAAAa,WAAA,CAAAF,MAAA,CAAAG,UAAA,CAAAL,SAAA,CAAAM,EAAA,CAAqB;IAAA,EAAC;IAACf,EAAA,CAAAE,MAAA,YAAI;IAAAF,EAAA,CAAAG,YAAA,EAAS;IAAAH,EAAA,CAAAE,MAAA,qBACrD;IAAAF,EAAA,CAAAC,cAAA,iBAAuC;IAA/BD,EAAA,CAAAI,UAAA,mBAAAY,4DAAA;MAAA,MAAAV,WAAA,GAAAN,EAAA,CAAAO,aAAA,CAAAC,GAAA;MAAA,MAAAC,SAAA,GAAAH,WAAA,CAAAI,SAAA;MAAA,MAAAO,MAAA,GAAAjB,EAAA,CAAAY,aAAA;MAAA,OAASZ,EAAA,CAAAa,WAAA,CAAAI,MAAA,CAAAC,YAAA,CAAAT,SAAA,CAAoB;IAAA,EAAC;IAACT,EAAA,CAAAE,MAAA,cAAM;IAAAF,EAAA,CAAAG,YAAA,EAAS;;;;IATpDH,EAAA,CAAAmB,SAAA,GAAiB;IAAjBnB,EAAA,CAAAoB,iBAAA,CAAAX,SAAA,CAAAY,IAAA,CAAiB;IACjBrB,EAAA,CAAAmB,SAAA,GAAqB;IAArBnB,EAAA,CAAAoB,iBAAA,CAAAX,SAAA,CAAAa,UAAA,CAAqB;IACrBtB,EAAA,CAAAmB,SAAA,GAA0B;IAA1BnB,EAAA,CAAAoB,iBAAA,CAAAX,SAAA,CAAAc,eAAA,CAA0B;IAC1BvB,EAAA,CAAAmB,SAAA,GAAsB;IAAtBnB,EAAA,CAAAoB,iBAAA,CAAAX,SAAA,CAAAe,WAAA,CAAsB;;;ADJlC,OAAM,MAAOC,mBAAmB;EAE9BC,YAAoBC,MAAc,EAASC,WAAwB;IAA/C,KAAAD,MAAM,GAANA,MAAM;IAAiB,KAAAC,WAAW,GAAXA,WAAW;IAEtD,KAAAC,OAAO,GAAU,EAAE;IACX,KAAAC,UAAU,GAAG,aAAa;EAHoC;EAKtEC,QAAQA,CAAA;IACN,IAAI,CAACC,sBAAsB,EAAE;EAC/B;EAEAA,sBAAsBA,CAAA;IACpB,MAAMC,UAAU,GAAG,IAAI,CAACL,WAAW,CAACM,OAAO,CAACnC,WAAW,CAAC;IACxD,IAAIkC,UAAU,IAAIA,UAAU,CAACJ,OAAO,EAAE;MACpC,IAAI,CAACA,OAAO,GAAGI,UAAU,CAACJ,OAAO;;EAErC;EAEAM,QAAQA,CAAA;IACN,MAAMC,IAAI,GAAG;MAAEP,OAAO,EAAE,IAAI,CAACA;IAAO,CAAE;IACtC,IAAI,CAACD,WAAW,CAACO,QAAQ,CAACpC,WAAW,EAAEqC,IAAI,CAAC;EAC9C;EAEAC,SAASA,CAAChB,IAAY;IACpB,MAAMiB,QAAQ,GAAG,IAAI,CAACC,gBAAgB,EAAE;IACxC,MAAMC,SAAS,GAAG;MAAEzB,EAAE,EAAEuB,QAAQ;MAAEjB;IAAI,CAAE;IACxC,IAAI,CAACQ,OAAO,CAACY,IAAI,CAACD,SAAS,CAAC;IAC5B,IAAI,CAACL,QAAQ,EAAE;EACjB;EAEQI,gBAAgBA,CAAA;IACtB,OAAOG,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,OAAO,CAAC;EAC5C;EAGQC,yBAAyBA,CAAA;IAC/BC,YAAY,CAACC,OAAO,CAAC,SAAS,EAAEC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACpB,OAAO,CAAC,CAAC;EAC/D;EAEAf,UAAUA,CAACwB,QAAgB;IACzB,IAAI,CAACX,MAAM,CAACuB,QAAQ,CAAC,CAAC,qBAAqB,EAAEZ,QAAQ,CAAC,CAAC;EACzD;EAEApB,YAAYA,CAACiC,MAAW;IACtB,MAAMC,KAAK,GAAG,IAAI,CAACvB,OAAO,CAACwB,OAAO,CAACF,MAAM,CAAC;IAC1C,IAAIC,KAAK,KAAK,CAAC,CAAC,EAAE;MAChB,IAAI,CAACvB,OAAO,CAACyB,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;;IAE/BG,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEL,MAAM,CAAC;EACzC;EAAC,QAAAM,CAAA,G;qBAjDUhC,mBAAmB,EAAAzB,EAAA,CAAA0D,iBAAA,CAAAC,EAAA,CAAAC,MAAA,GAAA5D,EAAA,CAAA0D,iBAAA,CAAAG,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAnBtC,mBAAmB;IAAAuC,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,6BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCbhCtE,EAAA,CAAAC,cAAA,aAAyB;QACnBD,EAAA,CAAAE,MAAA,mBAAY;QAAAF,EAAA,CAAAG,YAAA,EAAK;QACrBH,EAAA,CAAAC,cAAA,eAA4B;QAGlBD,EAAA,CAAAE,MAAA,WAAI;QAAAF,EAAA,CAAAG,YAAA,EAAK;QACbH,EAAA,CAAAC,cAAA,SAAI;QAAAD,EAAA,CAAAE,MAAA,iBAAU;QAAAF,EAAA,CAAAG,YAAA,EAAK;QACnBH,EAAA,CAAAC,cAAA,UAAI;QAAAD,EAAA,CAAAE,MAAA,uBAAe;QAAAF,EAAA,CAAAG,YAAA,EAAK;QACxBH,EAAA,CAAAC,cAAA,UAAI;QAAAD,EAAA,CAAAE,MAAA,mBAAW;QAAAF,EAAA,CAAAG,YAAA,EAAK;QACpBH,EAAA,CAAAC,cAAA,UAAI;QAAAD,EAAA,CAAAE,MAAA,eAAO;QAAAF,EAAA,CAAAG,YAAA,EAAK;QAGpBH,EAAA,CAAAC,cAAA,aAAO;QACLD,EAAA,CAAAwE,UAAA,KAAAC,kCAAA,iBAYK;QACPzE,EAAA,CAAAG,YAAA,EAAQ;;;QAbiBH,EAAA,CAAAmB,SAAA,IAAU;QAAVnB,EAAA,CAAA0E,UAAA,YAAAH,GAAA,CAAA1C,OAAA,CAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}