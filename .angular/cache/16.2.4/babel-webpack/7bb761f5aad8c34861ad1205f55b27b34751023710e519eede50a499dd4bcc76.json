{"ast":null,"code":"import { STORAGE_KEY } from 'src/app/data.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/data.service\";\nimport * as i3 from \"@angular/forms\";\nexport class EditDoctorComponent {\n  constructor(route, router, dataService) {\n    this.route = route;\n    this.router = router;\n    this.dataService = dataService;\n    this.doctor = {};\n  }\n  ngOnInit() {\n    const idParam = this.route.snapshot.paramMap.get('id');\n    if (idParam !== null) {\n      const doctorId = +idParam;\n      this.doctor = this.dataService.getDoctorById(doctorId);\n    }\n  }\n  onSubmit() {\n    this.dataService.updateDoctor(this.doctor);\n    this.dataService.saveData(STORAGE_KEY, {\n      doctors: this.dataService.getDoctors()\n    });\n    this.doctor = {};\n    this.router.navigate(['/doctor-list']);\n  }\n  static #_ = this.ɵfac = function EditDoctorComponent_Factory(t) {\n    return new (t || EditDoctorComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.DataService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EditDoctorComponent,\n    selectors: [[\"app-edit-doctor\"]],\n    decls: 17,\n    vars: 2,\n    consts: [[1, \"container\"], [3, \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"name\", \"name\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"specialization\"], [\"type\", \"text\", \"id\", \"specialization\", \"name\", \"specialization\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 2, \"color\", \"#fcfbfb\", \"background-color\", \"rgba(0, 0, 255, 0.581)\", \"border-radius\", \"10px\", \"width\", \"80px\", \"height\", \"40px\", \"align-items\", \"center\"]],\n    template: function EditDoctorComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function EditDoctorComponent_Template_form_ngSubmit_1_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(2, \"h2\");\n        i0.ɵɵtext(3, \"Edit the data\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"br\");\n        i0.ɵɵelementStart(5, \"div\", 2)(6, \"label\", 3);\n        i0.ɵɵtext(7, \"Name: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function EditDoctorComponent_Template_input_ngModelChange_8_listener($event) {\n          return ctx.doctor.name = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(9, \"br\");\n        i0.ɵɵelementStart(10, \"div\", 2)(11, \"label\", 5);\n        i0.ɵɵtext(12, \"Specialization: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"input\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function EditDoctorComponent_Template_input_ngModelChange_13_listener($event) {\n          return ctx.doctor.specialty = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(14, \"br\");\n        i0.ɵɵelementStart(15, \"button\", 7);\n        i0.ɵɵtext(16, \"Save\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngModel\", ctx.doctor.name);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.doctor.specialty);\n      }\n    },\n    dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n    styles: [\".container[_ngcontent-%COMP%] {\\n    background-color: #ece2e220;\\n    padding: 20px;\\n    border: 1px solid #ccc;\\n    border-radius: 5px;\\n  }\\n  \\n  .container[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%] {\\n    color: #333;\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZG9jdG9ycy9lZGl0LWRvY3Rvci9lZGl0LWRvY3Rvci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksMkJBQTJCO0lBQzNCLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsa0JBQWtCO0VBQ3BCOztFQUVBO0lBQ0UsV0FBVztFQUNiIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2VjZTJlMjIwO1xuICAgIHBhZGRpbmc6IDIwcHg7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIH1cbiAgXG4gIC5jb250YWluZXIgaDIge1xuICAgIGNvbG9yOiAjMzMzO1xuICB9Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["STORAGE_KEY","EditDoctorComponent","constructor","route","router","dataService","doctor","ngOnInit","idParam","snapshot","paramMap","get","doctorId","getDoctorById","onSubmit","updateDoctor","saveData","doctors","getDoctors","navigate","_","i0","ɵɵdirectiveInject","i1","ActivatedRoute","Router","i2","DataService","_2","selectors","decls","vars","consts","template","EditDoctorComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","EditDoctorComponent_Template_form_ngSubmit_1_listener","ɵɵtext","ɵɵelementEnd","ɵɵelement","EditDoctorComponent_Template_input_ngModelChange_8_listener","$event","name","EditDoctorComponent_Template_input_ngModelChange_13_listener","specialty","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\LENOVO\\Desktop\\h2\\HMS\\src\\app\\doctors\\edit-doctor\\edit-doctor.component.ts","C:\\Users\\LENOVO\\Desktop\\h2\\HMS\\src\\app\\doctors\\edit-doctor\\edit-doctor.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { DataService } from 'src/app/data.service';\nimport { STORAGE_KEY } from 'src/app/data.service';\n\n@Component({\n  selector: 'app-edit-doctor',\n  templateUrl: './edit-doctor.component.html',\n  styleUrls: ['./edit-doctor.component.css']\n})\nexport class EditDoctorComponent implements OnInit {\n  doctor: any = {};\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private dataService: DataService\n  ) {}\n\n  ngOnInit() {\n    const idParam = this.route.snapshot.paramMap.get('id');\n    if (idParam !== null) {\n      const doctorId = +idParam;\n      this.doctor = this.dataService.getDoctorById(doctorId);\n    }\n  }\n\n  onSubmit() {\n    this.dataService.updateDoctor(this.doctor);\n    this.dataService.saveData(STORAGE_KEY, { doctors: this.dataService.getDoctors() });\n    this.doctor={};\n    this.router.navigate(['/doctor-list']);\n  }\n}\n","<div class=\"container\">\n  <form (ngSubmit)=\"onSubmit()\">\n    <h2>Edit the data</h2><br>\n  <div class=\"form-group\">\n    <label for=\"name\">Name: </label>\n    <input type=\"text\" id=\"name\" name=\"name\" [(ngModel)]=\"doctor.name\" required>\n  </div><br>\n  <div class=\"form-group\">\n    <label for=\"specialization\">Specialization: </label>\n    <input type=\"text\" id=\"specialization\" name=\"specialization\" [(ngModel)]=\"doctor.specialty\" required>\n  </div><br>\n  <button type=\"submit\" style=\"color: #fcfbfb; background-color: rgba(0, 0, 255, 0.581); border-radius: 10px; width: 80px; height:40px;align-items: center;\">Save</button>\n</form>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}